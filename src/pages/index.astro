---
import BaseLayout from '../layouts/BaseLayout.astro';
import { TreeNavigation } from '../components/TreeNavigation.tsx';
import '../styles/tree-navigation.css';
import '../styles/notation.css';

// Import all our organized JSON data
const toolsFiles = [
  'reconnaissance', 'vulnerability-assessment', 'exploitation', 
  'defense-monitoring', 'forensics-ir', 'cryptography', 
  'mobile-security', 'cloud-security', 'hardware-physical', 
  'development-security'
];

const learningFiles = [
  'certifications', 'training-platforms', 'books-publications', 'academic-programs'
];

const communityFiles = [
  'physical-communities', 'online-communities', 'conferences-events'
];

const careerFiles = [
  'job-search', 'interview-prep', 'salary-compensation'
];

const practiceFiles = [
  'ctf', 'vulnerable-apps', 'bug-bounty'
];

const specializedFiles = [
  'cloud-security', 'iot-ics', 'mobile-security', 'automotive', 'blockchain'
];

const referencesFiles = [
  'standards-frameworks', 'tool-documentation', 'research-whitepapers'
];

const newsFiles = [
  'news-sites', 'podcasts-videos', 'social-media'
];

// Load metadata only (not full data - that will be loaded on demand)
const toolsData = await Promise.all(
  toolsFiles.map(async (file) => {
    const data = await import(`../data/tools/${file}.json`);
    return { file, ...data.metadata };
  })
);

const learningData = await Promise.all(
  learningFiles.map(async (file) => {
    const data = await import(`../data/learning/${file}.json`);
    return { file, ...data.metadata };
  })
);

const communityData = await Promise.all(
  communityFiles.map(async (file) => {
    const data = await import(`../data/communities/${file}.json`);
    return { file, ...data.metadata };
  })
);

const careerData = await Promise.all(
  careerFiles.map(async (file) => {
    const data = await import(`../data/career/${file}.json`);
    return { file, ...data.metadata };
  })
);

const practiceData = await Promise.all(
  practiceFiles.map(async (file) => {
    const data = await import(`../data/practice/${file}.json`);
    return { file, ...data.metadata };
  })
);

const specializedData = await Promise.all(
  specializedFiles.map(async (file) => {
    const data = await import(`../data/specialized-domains/${file}.json`);
    return { file, ...data.metadata };
  })
);

const referencesData = await Promise.all(
  referencesFiles.map(async (file) => {
    const data = await import(`../data/references/${file}.json`);
    return { file, ...data.metadata };
  })
);

const newsData = await Promise.all(
  newsFiles.map(async (file) => {
    const data = await import(`../data/news/${file}.json`);
    return { file, ...data.metadata };
  })
);

// Calculate totals
const totalTools = toolsData.reduce((sum, tool) => sum + tool.totalItems, 0);
const totalLearning = learningData.reduce((sum, item) => sum + item.totalItems, 0);
const totalCommunity = communityData.reduce((sum, item) => sum + item.totalItems, 0);
const totalCareer = careerData.reduce((sum, item) => sum + item.totalItems, 0);
const totalPractice = practiceData.reduce((sum, item) => sum + item.totalItems, 0);
const totalSpecialized = specializedData.reduce((sum, item) => sum + item.totalItems, 0);
const totalReferences = referencesData.reduce((sum, item) => sum + item.totalItems, 0);
const totalNews = newsData.reduce((sum, item) => sum + item.totalItems, 0);

// Reorganize tools by category
const toolsByPhase = {
  reconnaissance: toolsData.find(t => t.file === 'reconnaissance'),
  vulnerability: toolsData.find(t => t.file === 'vulnerability-assessment'),
  exploitation: toolsData.find(t => t.file === 'exploitation'),
  defense: toolsData.find(t => t.file === 'defense-monitoring'),
  forensics: toolsData.find(t => t.file === 'forensics-ir'),
  crypto: toolsData.find(t => t.file === 'cryptography'),
  mobile: toolsData.find(t => t.file === 'mobile-security'),
  cloud: toolsData.find(t => t.file === 'cloud-security'),
  hardware: toolsData.find(t => t.file === 'hardware-physical'),
  development: toolsData.find(t => t.file === 'development-security')
};

// Additional tool categories we need but don't have files for yet
const webSecurityData = { totalItems: 124, topTools: ['Burp Suite', 'OWASP ZAP', 'SQLMap', 'Nikto'] };
const networkTestingData = { totalItems: 89, topTools: ['Nmap', 'Wireshark', 'tcpdump', 'Masscan'] };
const siemData = { totalItems: 43, topTools: ['Splunk*', 'ELK Stack', 'QRadar*', 'Graylog'] };
const networkMonitoringData = { totalItems: 67, topTools: ['Snort', 'Suricata', 'Zeek', 'ntopng'] };
const endpointData = { totalItems: 52, topTools: ['CrowdStrike*', 'Sysmon', 'osquery', 'Carbon Black*'] };
const threatIntelData = { totalItems: 38, topTools: ['MISP', 'OpenCTI', 'ThreatConnect*', 'AlienVault'] };
const incidentResponseData = { totalItems: 45, topTools: ['TheHive', 'Velociraptor', 'GRR', 'KAPE'] };
const malwareAnalysisData = { totalItems: 73, topTools: ['Cuckoo', 'YARA', 'IDA Pro*', 'Ghidra'] };
const logAnalysisData = { totalItems: 41, topTools: ['Splunk', 'ELK', 'Graylog', 'LogParser'] };
const icsScadaData = { totalItems: 31, topTools: ['Shodan', 'PLCScan', 'S7comm', 'ISF'] };
const wirelessData = { totalItems: 64, topTools: ['Aircrack-ng', 'Kismet', 'WiFite', 'Reaver'] };
const osintData = { totalItems: 89, topTools: ['Shodan', 'theHarvester', 'SpiderFoot', 'Maltego*'] };

// Placeholder data for new sections
const complianceData = [
  { file: 'pci-dss', title: 'PCI-DSS', totalItems: 24, topItems: ['PCI DSS v4.0 Requirements', 'SAQ Templates', 'Scoping Guidance', 'Compensating Controls'] },
  { file: 'hipaa', title: 'HIPAA', totalItems: 18, topItems: ['Security Rule', 'Privacy Rule', 'Breach Notification', 'Risk Assessment'] },
  { file: 'gdpr', title: 'GDPR', totalItems: 31, topItems: ['Data Protection Principles', 'DPIA Templates', 'Privacy Notices', 'Breach Response'] },
  { file: 'iso27001', title: 'ISO 27001', totalItems: 42, topItems: ['Control Objectives', 'Risk Register', 'ISMS Documentation', 'Audit Checklists'] },
  { file: 'soc2', title: 'SOC 2', totalItems: 27, topItems: ['Trust Service Criteria', 'Control Activities', 'Evidence Collection', 'Report Types'] }
];
const totalCompliance = complianceData.reduce((sum, item) => sum + item.totalItems, 0);

const vulnIntelData = [
  { file: 'cve-databases', title: 'CVE Databases', totalItems: 15, topItems: ['NVD', 'MITRE CVE', 'CVE Details', 'VulDB'] },
  { file: 'exploit-databases', title: 'Exploit Databases', totalItems: 12, topItems: ['Exploit-DB', 'Metasploit DB', '0day.today*', 'Packet Storm'] },
  { file: 'vulnerability-feeds', title: 'Vulnerability Feeds', totalItems: 18, topItems: ['US-CERT', 'Full Disclosure', 'Vulners API', 'SecurityFocus'] },
  { file: 'bug-bounty-platforms', title: 'Bug Bounty Platforms', totalItems: 11, topItems: ['HackerOne', 'Bugcrowd', 'Synack*', 'YesWeHack'] }
];
const totalVulnIntel = vulnIntelData.reduce((sum, item) => sum + item.totalItems, 0);

const distrosData = [
  { file: 'offensive', title: 'Offensive Security', totalItems: 8, topItems: ['Kali Linux', 'Parrot Security', 'BlackArch', 'Pentoo'] },
  { file: 'defensive', title: 'Defensive Security', totalItems: 7, topItems: ['Security Onion', 'SIFT Workstation', 'REMnux', 'CAINE'] },
  { file: 'privacy', title: 'Privacy Focused', totalItems: 6, topItems: ['Tails', 'Whonix', 'Qubes OS', 'Kodachi'] }
];
const totalDistros = distrosData.reduce((sum, item) => sum + item.totalItems, 0);

// Prepare all data for the tree component
const allData = {
  totalTools,
  totalLearning,
  totalCommunity,
  totalCareer,
  totalPractice,
  totalSpecialized,
  totalReferences,
  totalNews,
  totalCompliance,
  totalVulnIntel,
  totalDistros,
  toolsData,
  learningData,
  communityData,
  careerData,
  practiceData,
  specializedData,
  referencesData,
  newsData,
  complianceData,
  vulnIntelData,
  distrosData,
  toolsByPhase,
  webSecurityData,
  networkTestingData,
  siemData,
  networkMonitoringData,
  endpointData,
  threatIntelData,
  incidentResponseData,
  malwareAnalysisData,
  logAnalysisData,
  icsScadaData,
  wirelessData,
  osintData
};
---

<BaseLayout title="Home">
<style>
  .hero-section {
    text-align: center;
    margin-bottom: 40px;
  }
  
  .footer-stats {
    text-align: center;
    color: #666;
    font-size: 11px;
    margin: 20px 0;
    padding-top: 12px;
    border-top: 1px solid #333;
  }
</style>

<div class="hero-section">
  <h1 style="font-size: 24px; margin: 20px 0 10px;">Welcome to SecRef</h1>
  <p style="color: #888; margin: 0 0 30px;">The comprehensive cybersecurity resource directory. Click to explore.</p>
</div>

<TreeNavigation data={allData} client:load />

<div class="notation-key">
  <span class="notation-key-title">Resource Key:</span>
  <span class="notation-key-item">
    <span class="notation notation-free" data-tooltip="Freemium - Basic features free, advanced features require payment">(F)</span>
    Freemium
  </span>
  <span class="notation-key-item">
    <span class="notation notation-paid" data-tooltip="Paid only - No free version available">($)</span>
    Paid
  </span>
  <span class="notation-key-item">
    <span class="notation notation-enterprise" data-tooltip="Enterprise pricing - Contact sales for custom quote">(E)</span>
    Enterprise
  </span>
  <span class="notation-key-item">
    <span class="notation notation-registration" data-tooltip="Registration required">â€ </span>
    Registration required
  </span>
</div>

<div class="footer-stats">
  {totalTools + totalLearning + totalCommunity + totalCareer + totalPractice + totalSpecialized + totalReferences + totalNews + totalCompliance + totalVulnIntel + totalDistros} resources | Updated: {new Date().toLocaleDateString()}
</div>
</BaseLayout>