name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r admin/requirements.txt
        pip install -r tests/requirements.txt
    
    - name: Run unit tests
      run: |
        python -m pytest tests/test_database.py -v
    
    - name: Run API tests
      run: |
        python -m pytest tests/test_api.py -v
    
    - name: Run UI tests
      run: |
        python -m pytest tests/test_ui.py -v
    
    - name: Run integration tests
      run: |
        python -m pytest tests/test_integration.py -v
    
    - name: Generate coverage report
      run: |
        python -m pytest --cov=scripts --cov=admin --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 scripts/ admin/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 scripts/ admin/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check scripts/ admin/ tests/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only scripts/ admin/ tests/
    
    - name: Run mypy type checking
      run: |
        mypy scripts/ admin/ || true  # Don't fail on type errors for now